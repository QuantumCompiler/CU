{"ast":null,"code":"var _jsxFileName = \"/Users/taylor/Documents/CSPB 3308/Recipe-Genie/recipe-genie/src/JS/Components/RecipeCards.js\";\nimport React from 'react';\nimport { Card, CardMedia, CardContent, CardActions, Typography } from '@mui/material';\nimport Recipe from '../Utilities/RecipeClass.js';\n\n/*  RecipeCards - A class component to display recipe cards\n    Inputs:\n        None\n    Algorithm:\n        * Retrieve the most recent recipe data from local storage\n        * Call the convertAPIResults function to convert the data to Recipe objects\n        * Render a card for each Recipe object\n    Return:\n        A list of cards containing the recipe information\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RecipeCards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: []\n    };\n  }\n  /*  convertAPIResults - A function to convert the results from the spoonacular API to Recipe objects\n      Inputs:\n          None\n      Algorithm:\n          * Retrieve the recipe data from local storage\n          * Convert the data to JSON\n          * Create an array of Recipe objects from the JSON data\n      Return:\n          An array of Recipe objects\n  */\n  convertAPIResults() {\n    // Retrieve Recipe\n    const stored = localStorage.getItem('NewRecipe');\n    // Convert To JSON\n    const storedJSON = JSON.parse(stored);\n    // Create Recipes Array And Append\n    const recipes = [];\n    for (let i = 0; i < storedJSON.length; i++) {\n      recipes.push(new Recipe(storedJSON[i]));\n    }\n    return recipes;\n  }\n\n  /*  componentDidMount - A lifecycle method that runs after the component has mounted\n      Inputs:\n          None\n      Algorithm:\n          * Set the state of the component to contain the converted API results\n      Return:\n          Updates the state of the component with the converted API results\n  */\n  componentDidMount() {\n    this.setState({\n      recipes: this.convertAPIResults()\n    });\n  }\n\n  /*  render - A function to render the component\n      Inputs:\n          None\n      Algorithm:\n          * Map over the recipes array and render a card for each Recipe object\n      Return:\n          A list of cards containing the recipe information\n  */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          margin: 2,\n          width: `${window.innerWidth / 2}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            align: \"center\",\n            children: [recipe.Title, \" - \", recipe.Likes, \" Likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            style: {\n              height: '200px',\n              width: '500px',\n              objectFit: 'contain'\n            },\n            image: recipe.Image,\n            alt: recipe.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"p\",\n            component: \"div\",\n            children: [\"Ingredients You Already Have: \", recipe.UsedIngredientCount, \" - \", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'blue'\n              },\n              children: recipe.ShowUsedIngredientsNames()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"p\",\n            component: \"div\",\n            children: [\"Ingredients You Are Missing: \", recipe.MissedIngredientCount, \" - \", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: recipe.ShowMissingIngredientsNames()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Card","CardMedia","CardContent","CardActions","Typography","Recipe","jsxDEV","_jsxDEV","RecipeCards","Component","constructor","props","state","recipes","convertAPIResults","stored","localStorage","getItem","storedJSON","JSON","parse","i","length","push","componentDidMount","setState","render","children","map","recipe","index","sx","margin","width","window","innerWidth","gutterBottom","variant","component","align","Title","Likes","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","height","objectFit","image","Image","alt","UsedIngredientCount","color","ShowUsedIngredientsNames","MissedIngredientCount","ShowMissingIngredientsNames"],"sources":["/Users/taylor/Documents/CSPB 3308/Recipe-Genie/recipe-genie/src/JS/Components/RecipeCards.js"],"sourcesContent":["import React from 'react';\nimport { Card, CardMedia, CardContent, CardActions, Typography} from '@mui/material';\nimport Recipe from '../Utilities/RecipeClass.js';\n\n/*  RecipeCards - A class component to display recipe cards\n    Inputs:\n        None\n    Algorithm:\n        * Retrieve the most recent recipe data from local storage\n        * Call the convertAPIResults function to convert the data to Recipe objects\n        * Render a card for each Recipe object\n    Return:\n        A list of cards containing the recipe information\n*/\nexport default class RecipeCards extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipes: []\n        };\n    }\n    /*  convertAPIResults - A function to convert the results from the spoonacular API to Recipe objects\n        Inputs:\n            None\n        Algorithm:\n            * Retrieve the recipe data from local storage\n            * Convert the data to JSON\n            * Create an array of Recipe objects from the JSON data\n        Return:\n            An array of Recipe objects\n    */\n    convertAPIResults() {\n        // Retrieve Recipe\n        const stored = localStorage.getItem('NewRecipe');\n        // Convert To JSON\n        const storedJSON = JSON.parse(stored);\n        // Create Recipes Array And Append\n        const recipes = [];\n        for (let i = 0; i < storedJSON.length; i++) {\n            recipes.push(new Recipe(storedJSON[i]));\n        }\n        return recipes;\n    }\n\n    /*  componentDidMount - A lifecycle method that runs after the component has mounted\n        Inputs:\n            None\n        Algorithm:\n            * Set the state of the component to contain the converted API results\n        Return:\n            Updates the state of the component with the converted API results\n    */\n    componentDidMount() {\n        this.setState({\n            recipes: this.convertAPIResults()\n        });\n    }\n\n    /*  render - A function to render the component\n        Inputs:\n            None\n        Algorithm:\n            * Map over the recipes array and render a card for each Recipe object\n        Return:\n            A list of cards containing the recipe information\n    */\n    render() {\n        return (\n            <div>\n                {this.state.recipes.map((recipe, index) => (\n                    <Card key={index} \n                        sx={{ \n                            margin: 2,\n                            width: `${window.innerWidth / 2}px`,\n                        }}\n                    >\n                        {/* Title Of Recipe */}\n                        <CardContent>\n                            <Typography\n                                gutterBottom variant=\"h5\" \n                                component=\"div\"\n                                align='center'\n                            >\n                                {recipe.Title} - {recipe.Likes} Likes\n                            </Typography>\n                        </CardContent>\n                        {/* Image Of Recipe */}\n                        <div\n                            style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                        >\n                            <CardMedia\n                                component=\"img\"\n                                style={{height: '200px', width: '500px', objectFit: 'contain'}}\n                                image={recipe.Image}\n                                alt={recipe.Title}\n                            />\n                        </div>\n                        {/* Content Of Recipe */}\n                        <CardContent>\n                            {/* Used Ingredients (Ingredients You Already Have) */}\n                            <Typography\n                                gutterBottom variant='p'\n                                component=\"div\"\n                            >\n                                Ingredients You Already Have: {recipe.UsedIngredientCount} - {' '}\n                                <span style={{ color: 'blue'}}>\n                                    {recipe.ShowUsedIngredientsNames()}\n                                </span>\n                            </Typography>\n                            {/* Missing Ingredients (Ingredients You Are Missing) */}\n                            <Typography\n                                gutterBottom variant='p'\n                                component='div'\n                            >\n                                Ingredients You Are Missing: {recipe.MissedIngredientCount} - {' '}\n                                <span style={{ color: 'red'}}>\n                                    {recipe.ShowMissingIngredientsNames()}\n                                </span>\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                ))}\n            </div>\n        );\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}